Testing default constructor

v1: 
v1 size: 0
v1 capacity: 0
v1 is empty

Testing push_back()

v1: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 
v1 size: 19
v1 capacity: 32
v1 is not empty

Testing pop_back()

v1: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v1 size: 16
v1 capacity: 32
v1 is not empty

Testing copy constructor()

v1: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v1 size: 16
v1 capacity: 32
v1 is not empty

v2: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v2 size: 16
v2 capacity: 32
v2 is not empty

Testing front() and back()

Front item of v1: 10
Front item of v2: 10

Rear item of v1: 160
Rear item of v2: 160

v1: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v1 size: 16
v1 capacity: 32
v1 is not empty

v2: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v2 size: 16
v2 capacity: 32
v2 is not empty

Testing pop() to empty

160 150 140 130 120 110 100 90 80 70 60 50 40 30 20 10 
v1 size: 0
v1 capacity: 32
v1 is empty

Testing copy assignment operator

v2: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v2 size: 16
v2 capacity: 32
v2 is not empty

v3: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v3 size: 16
v3 capacity: 32
v3 is not empty

v3: 
v3 size: 0
v3 capacity: 0
v3 is empty

v4: 
v4 size: 0
v4 capacity: 0
v4 is empty

v3: 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v3 size: 16
v3 capacity: 32
v3 is not empty

Testing clear()

v2 (size 0): 
v3 (size 16): 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 

Testing assignment to self and swap

v2 (size 16): 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v3 (size 0): 

Testing chained assignment

v2 (size 16): 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v3 (size 16): 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 
v5 (size 16): 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 

Testing write version of subscript operator

v5 (size 16): 15 25 35 45 55 65 75 85 95 105 115 125 135 145 155 165 

Testing read version of subscript operator

v5: 15 25 35 45 55 65 75 85 95 105 115 125 135 145 155 165 

Testing const correctness

v5: 15 25 35 45 55 65 75 85 95 105 115 125 135 145 155 165 
v5 size: 16
v5 capacity: 32
v5 is not empty
Front item of v5: 15
Rear item of v5: 165
4th item of v5: 45

v1: 15 25 35 45 55 65 75 85 95 105 115 125 135 145 155 165 
v1 size: 16
v1 is not empty

Testing equality operator

v1 and v5 are equal
v5 and v3 are not equal
v1 and v2 are not equal
v1 and v5 are now not equal

